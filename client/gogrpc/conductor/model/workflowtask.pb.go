// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/workflowtask.proto

package model // import "github.com/netflix/conductor/client/gogrpc/conductor/model"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkflowTask_Type int32

const (
	WorkflowTask_SIMPLE            WorkflowTask_Type = 0
	WorkflowTask_DYNAMIC           WorkflowTask_Type = 1
	WorkflowTask_FORK_JOIN         WorkflowTask_Type = 2
	WorkflowTask_FORK_JOIN_DYNAMIC WorkflowTask_Type = 3
	WorkflowTask_DECISION          WorkflowTask_Type = 4
	WorkflowTask_JOIN              WorkflowTask_Type = 5
	WorkflowTask_SUB_WORKFLOW      WorkflowTask_Type = 6
	WorkflowTask_EVENT             WorkflowTask_Type = 7
	WorkflowTask_WAIT              WorkflowTask_Type = 8
	WorkflowTask_USER_DEFINED      WorkflowTask_Type = 9
)

var WorkflowTask_Type_name = map[int32]string{
	0: "SIMPLE",
	1: "DYNAMIC",
	2: "FORK_JOIN",
	3: "FORK_JOIN_DYNAMIC",
	4: "DECISION",
	5: "JOIN",
	6: "SUB_WORKFLOW",
	7: "EVENT",
	8: "WAIT",
	9: "USER_DEFINED",
}
var WorkflowTask_Type_value = map[string]int32{
	"SIMPLE":            0,
	"DYNAMIC":           1,
	"FORK_JOIN":         2,
	"FORK_JOIN_DYNAMIC": 3,
	"DECISION":          4,
	"JOIN":              5,
	"SUB_WORKFLOW":      6,
	"EVENT":             7,
	"WAIT":              8,
	"USER_DEFINED":      9,
}

func (x WorkflowTask_Type) String() string {
	return proto.EnumName(WorkflowTask_Type_name, int32(x))
}
func (WorkflowTask_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_workflowtask_24620b75c66c94aa, []int{0, 0}
}

type WorkflowTask struct {
	Name                           string                                    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TaskReferenceName              string                                    `protobuf:"bytes,2,opt,name=task_reference_name,json=taskReferenceName" json:"task_reference_name,omitempty"`
	Description                    string                                    `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	InputParameters                map[string]*_struct.Value                 `protobuf:"bytes,4,rep,name=input_parameters,json=inputParameters" json:"input_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Type                           string                                    `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	DynamicTaskNameParam           string                                    `protobuf:"bytes,6,opt,name=dynamic_task_name_param,json=dynamicTaskNameParam" json:"dynamic_task_name_param,omitempty"`
	CaseValueParam                 string                                    `protobuf:"bytes,7,opt,name=case_value_param,json=caseValueParam" json:"case_value_param,omitempty"`
	CaseExpression                 string                                    `protobuf:"bytes,8,opt,name=case_expression,json=caseExpression" json:"case_expression,omitempty"`
	DecisionCases                  map[string]*WorkflowTask_WorkflowTaskList `protobuf:"bytes,9,rep,name=decision_cases,json=decisionCases" json:"decision_cases,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DynamicForkTasksParam          string                                    `protobuf:"bytes,10,opt,name=dynamic_fork_tasks_param,json=dynamicForkTasksParam" json:"dynamic_fork_tasks_param,omitempty"`
	DynamicForkTasksInputParamName string                                    `protobuf:"bytes,11,opt,name=dynamic_fork_tasks_input_param_name,json=dynamicForkTasksInputParamName" json:"dynamic_fork_tasks_input_param_name,omitempty"`
	DefaultCase                    []*WorkflowTask                           `protobuf:"bytes,12,rep,name=default_case,json=defaultCase" json:"default_case,omitempty"`
	ForkTasks                      []*WorkflowTask_WorkflowTaskList          `protobuf:"bytes,13,rep,name=fork_tasks,json=forkTasks" json:"fork_tasks,omitempty"`
	StartDelay                     int32                                     `protobuf:"varint,14,opt,name=start_delay,json=startDelay" json:"start_delay,omitempty"`
	SubWorkflowParam               *SubWorkflowParams                        `protobuf:"bytes,15,opt,name=sub_workflow_param,json=subWorkflowParam" json:"sub_workflow_param,omitempty"`
	JoinOn                         []string                                  `protobuf:"bytes,16,rep,name=join_on,json=joinOn" json:"join_on,omitempty"`
	Sink                           string                                    `protobuf:"bytes,17,opt,name=sink" json:"sink,omitempty"`
	Optional                       bool                                      `protobuf:"varint,18,opt,name=optional" json:"optional,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                                  `json:"-"`
	XXX_unrecognized               []byte                                    `json:"-"`
	XXX_sizecache                  int32                                     `json:"-"`
}

func (m *WorkflowTask) Reset()         { *m = WorkflowTask{} }
func (m *WorkflowTask) String() string { return proto.CompactTextString(m) }
func (*WorkflowTask) ProtoMessage()    {}
func (*WorkflowTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_workflowtask_24620b75c66c94aa, []int{0}
}
func (m *WorkflowTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTask.Unmarshal(m, b)
}
func (m *WorkflowTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTask.Marshal(b, m, deterministic)
}
func (dst *WorkflowTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTask.Merge(dst, src)
}
func (m *WorkflowTask) XXX_Size() int {
	return xxx_messageInfo_WorkflowTask.Size(m)
}
func (m *WorkflowTask) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTask.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTask proto.InternalMessageInfo

func (m *WorkflowTask) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowTask) GetTaskReferenceName() string {
	if m != nil {
		return m.TaskReferenceName
	}
	return ""
}

func (m *WorkflowTask) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *WorkflowTask) GetInputParameters() map[string]*_struct.Value {
	if m != nil {
		return m.InputParameters
	}
	return nil
}

func (m *WorkflowTask) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WorkflowTask) GetDynamicTaskNameParam() string {
	if m != nil {
		return m.DynamicTaskNameParam
	}
	return ""
}

func (m *WorkflowTask) GetCaseValueParam() string {
	if m != nil {
		return m.CaseValueParam
	}
	return ""
}

func (m *WorkflowTask) GetCaseExpression() string {
	if m != nil {
		return m.CaseExpression
	}
	return ""
}

func (m *WorkflowTask) GetDecisionCases() map[string]*WorkflowTask_WorkflowTaskList {
	if m != nil {
		return m.DecisionCases
	}
	return nil
}

func (m *WorkflowTask) GetDynamicForkTasksParam() string {
	if m != nil {
		return m.DynamicForkTasksParam
	}
	return ""
}

func (m *WorkflowTask) GetDynamicForkTasksInputParamName() string {
	if m != nil {
		return m.DynamicForkTasksInputParamName
	}
	return ""
}

func (m *WorkflowTask) GetDefaultCase() []*WorkflowTask {
	if m != nil {
		return m.DefaultCase
	}
	return nil
}

func (m *WorkflowTask) GetForkTasks() []*WorkflowTask_WorkflowTaskList {
	if m != nil {
		return m.ForkTasks
	}
	return nil
}

func (m *WorkflowTask) GetStartDelay() int32 {
	if m != nil {
		return m.StartDelay
	}
	return 0
}

func (m *WorkflowTask) GetSubWorkflowParam() *SubWorkflowParams {
	if m != nil {
		return m.SubWorkflowParam
	}
	return nil
}

func (m *WorkflowTask) GetJoinOn() []string {
	if m != nil {
		return m.JoinOn
	}
	return nil
}

func (m *WorkflowTask) GetSink() string {
	if m != nil {
		return m.Sink
	}
	return ""
}

func (m *WorkflowTask) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

type WorkflowTask_WorkflowTaskList struct {
	Tasks                []*WorkflowTask `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorkflowTask_WorkflowTaskList) Reset()         { *m = WorkflowTask_WorkflowTaskList{} }
func (m *WorkflowTask_WorkflowTaskList) String() string { return proto.CompactTextString(m) }
func (*WorkflowTask_WorkflowTaskList) ProtoMessage()    {}
func (*WorkflowTask_WorkflowTaskList) Descriptor() ([]byte, []int) {
	return fileDescriptor_workflowtask_24620b75c66c94aa, []int{0, 0}
}
func (m *WorkflowTask_WorkflowTaskList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTask_WorkflowTaskList.Unmarshal(m, b)
}
func (m *WorkflowTask_WorkflowTaskList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTask_WorkflowTaskList.Marshal(b, m, deterministic)
}
func (dst *WorkflowTask_WorkflowTaskList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTask_WorkflowTaskList.Merge(dst, src)
}
func (m *WorkflowTask_WorkflowTaskList) XXX_Size() int {
	return xxx_messageInfo_WorkflowTask_WorkflowTaskList.Size(m)
}
func (m *WorkflowTask_WorkflowTaskList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTask_WorkflowTaskList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTask_WorkflowTaskList proto.InternalMessageInfo

func (m *WorkflowTask_WorkflowTaskList) GetTasks() []*WorkflowTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkflowTask)(nil), "com.netflix.conductor.proto.WorkflowTask")
	proto.RegisterMapType((map[string]*WorkflowTask_WorkflowTaskList)(nil), "com.netflix.conductor.proto.WorkflowTask.DecisionCasesEntry")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "com.netflix.conductor.proto.WorkflowTask.InputParametersEntry")
	proto.RegisterType((*WorkflowTask_WorkflowTaskList)(nil), "com.netflix.conductor.proto.WorkflowTask.WorkflowTaskList")
	proto.RegisterEnum("com.netflix.conductor.proto.WorkflowTask_Type", WorkflowTask_Type_name, WorkflowTask_Type_value)
}

func init() {
	proto.RegisterFile("model/workflowtask.proto", fileDescriptor_workflowtask_24620b75c66c94aa)
}

var fileDescriptor_workflowtask_24620b75c66c94aa = []byte{
	// 774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xef, 0x6b, 0xdb, 0x3a,
	0x14, 0x7d, 0x6e, 0x7e, 0x5f, 0xa7, 0xa9, 0xab, 0xd7, 0xbe, 0x9a, 0xbc, 0xf7, 0xb6, 0xd0, 0x7d,
	0x58, 0x06, 0xc3, 0x81, 0x8e, 0xb1, 0x51, 0xc6, 0x46, 0xdb, 0x38, 0xe0, 0x35, 0x4d, 0x82, 0x93,
	0x36, 0xb4, 0x0c, 0x8c, 0x63, 0x2b, 0x99, 0x17, 0xc7, 0x0a, 0x96, 0xbc, 0x36, 0xb0, 0xbf, 0x63,
	0xdf, 0xf7, 0x9f, 0x0e, 0xc9, 0x76, 0x92, 0x76, 0xa5, 0x74, 0xec, 0x9b, 0x74, 0xef, 0xb9, 0xd7,
	0xe7, 0x1c, 0x5d, 0xc9, 0xa0, 0xce, 0x88, 0x8b, 0xfd, 0xc6, 0x35, 0x09, 0xa7, 0x63, 0x9f, 0x5c,
	0x33, 0x9b, 0x4e, 0xb5, 0x79, 0x48, 0x18, 0x41, 0xff, 0x3a, 0x64, 0xa6, 0x05, 0x98, 0x8d, 0x7d,
	0xef, 0x46, 0x73, 0x48, 0xe0, 0x46, 0x0e, 0x23, 0x61, 0x9c, 0xac, 0xfe, 0x1f, 0x97, 0xd1, 0x68,
	0x94, 0x56, 0xce, 0xed, 0xd0, 0x9e, 0xd1, 0x24, 0xfd, 0xdf, 0x84, 0x90, 0x89, 0x8f, 0x1b, 0x62,
	0x37, 0x8a, 0xc6, 0x0d, 0xca, 0xc2, 0xc8, 0x61, 0x71, 0x76, 0xff, 0x87, 0x0c, 0xe5, 0x61, 0x52,
	0x36, 0xb0, 0xe9, 0x14, 0x21, 0xc8, 0x06, 0xf6, 0x0c, 0xab, 0x52, 0x4d, 0xaa, 0x97, 0x4c, 0xb1,
	0x46, 0x1a, 0xfc, 0xcd, 0xc9, 0x58, 0x21, 0x1e, 0xe3, 0x10, 0x07, 0x0e, 0xb6, 0x04, 0x64, 0x43,
	0x40, 0xb6, 0x79, 0xca, 0x4c, 0x33, 0x1d, 0x8e, 0xaf, 0x81, 0xec, 0x62, 0xea, 0x84, 0xde, 0x9c,
	0x79, 0x24, 0x50, 0x33, 0x02, 0xb7, 0x1e, 0x42, 0x1e, 0x28, 0x5e, 0x30, 0x8f, 0x98, 0x25, 0xa8,
	0x62, 0x86, 0x43, 0xaa, 0x66, 0x6b, 0x99, 0xba, 0x7c, 0xf0, 0x5e, 0x7b, 0x40, 0xab, 0xb6, 0x4e,
	0x55, 0x33, 0x78, 0x87, 0xde, 0xb2, 0x81, 0x1e, 0xb0, 0x70, 0x61, 0x6e, 0x79, 0xb7, 0xa3, 0x5c,
	0x10, 0x5b, 0xcc, 0xb1, 0x9a, 0x8b, 0x05, 0xf1, 0x35, 0x7a, 0x0d, 0x7b, 0xee, 0x22, 0xb0, 0x67,
	0x9e, 0x63, 0x09, 0x61, 0x5c, 0x4e, 0x4c, 0x45, 0xcd, 0x0b, 0xd8, 0x4e, 0x92, 0xe6, 0xdf, 0xe1,
	0x92, 0x44, 0x3f, 0x54, 0x07, 0xc5, 0xb1, 0x29, 0xb6, 0xbe, 0xda, 0x7e, 0x94, 0xe2, 0x0b, 0x02,
	0x5f, 0xe1, 0xf1, 0x0b, 0x1e, 0x8e, 0x91, 0xcf, 0x61, 0x4b, 0x20, 0xf1, 0xcd, 0x3c, 0xc4, 0x94,
	0x72, 0x17, 0x8a, 0x2b, 0xa0, 0xbe, 0x8c, 0x22, 0x07, 0x2a, 0x2e, 0x76, 0x3c, 0xbe, 0xb6, 0x78,
	0x8a, 0xaa, 0x25, 0x61, 0xc3, 0xbb, 0xc7, 0xdb, 0xd0, 0x4c, 0xea, 0x4f, 0x78, 0x79, 0x6c, 0xc2,
	0xa6, 0xbb, 0x1e, 0x43, 0x6f, 0x40, 0x4d, 0xe5, 0x8e, 0x49, 0x38, 0x15, 0x9a, 0x69, 0xc2, 0x1f,
	0x04, 0xad, 0xdd, 0x24, 0xdf, 0x22, 0xe1, 0x94, 0x37, 0xa5, 0xb1, 0x8c, 0x53, 0x78, 0x76, 0x4f,
	0xe1, 0xda, 0xc9, 0xc5, 0x83, 0x20, 0x8b, 0x1e, 0x4f, 0xee, 0xf6, 0x58, 0x9d, 0x8f, 0x98, 0x8a,
	0x36, 0x94, 0x5d, 0x3c, 0xb6, 0x23, 0x9f, 0x09, 0xa5, 0x6a, 0x59, 0x08, 0x7d, 0xf1, 0x68, 0xa1,
	0x7c, 0x82, 0x44, 0x39, 0x17, 0x85, 0x2e, 0x01, 0x56, 0x94, 0xd4, 0x4d, 0xd1, 0xeb, 0xf0, 0xf1,
	0xa6, 0xad, 0x6f, 0xda, 0x1e, 0x65, 0x66, 0x69, 0x9c, 0xd2, 0x46, 0x4f, 0x41, 0xa6, 0xcc, 0x0e,
	0x99, 0xe5, 0x62, 0xdf, 0x5e, 0xa8, 0x95, 0x9a, 0x54, 0xcf, 0x99, 0x20, 0x42, 0x4d, 0x1e, 0x41,
	0x9f, 0x00, 0xd1, 0x68, 0x64, 0xa5, 0xd7, 0x2d, 0x71, 0x72, 0xab, 0x26, 0xd5, 0xe5, 0x03, 0xed,
	0x41, 0x0e, 0xfd, 0x68, 0x94, 0x7e, 0x59, 0x18, 0x43, 0x4d, 0x85, 0xde, 0x09, 0xa1, 0x3d, 0x28,
	0x7c, 0x21, 0x5e, 0x60, 0x91, 0x40, 0x55, 0x6a, 0x99, 0x7a, 0xc9, 0xcc, 0xf3, 0x6d, 0x37, 0xe0,
	0x93, 0x4c, 0xbd, 0x60, 0xaa, 0x6e, 0xc7, 0x93, 0xcc, 0xd7, 0xa8, 0x0a, 0x45, 0x22, 0xae, 0x94,
	0xed, 0xab, 0xa8, 0x26, 0xd5, 0x8b, 0xe6, 0x72, 0x5f, 0xed, 0x83, 0x72, 0x57, 0x26, 0xfa, 0x00,
	0xb9, 0xd8, 0x31, 0xe9, 0x77, 0xdd, 0x8f, 0xeb, 0xaa, 0x57, 0xb0, 0x73, 0xdf, 0xbd, 0x43, 0x0a,
	0x64, 0xa6, 0x78, 0x91, 0x3c, 0x1b, 0x7c, 0x89, 0x5e, 0x42, 0x4e, 0x5c, 0x14, 0xf1, 0x4e, 0xc8,
	0x07, 0xff, 0x68, 0xf1, 0x43, 0xa4, 0xa5, 0x0f, 0x91, 0x26, 0xee, 0x8b, 0x19, 0x83, 0x0e, 0x37,
	0xde, 0x4a, 0xd5, 0x6f, 0x80, 0x7e, 0x1d, 0xe6, 0x7b, 0x3a, 0xf7, 0x6e, 0x77, 0xfe, 0x93, 0x63,
	0x5f, 0x7d, 0x7d, 0xff, 0xbb, 0x04, 0xd9, 0x01, 0x7f, 0x1d, 0x00, 0xf2, 0x7d, 0xe3, 0xac, 0xd7,
	0xd6, 0x95, 0xbf, 0x90, 0x0c, 0x85, 0xe6, 0x65, 0xe7, 0xe8, 0xcc, 0x38, 0x51, 0x24, 0xb4, 0x09,
	0xa5, 0x56, 0xd7, 0x3c, 0xb5, 0x3e, 0x76, 0x8d, 0x8e, 0xb2, 0x81, 0x76, 0x61, 0x7b, 0xb9, 0xb5,
	0x52, 0x54, 0x06, 0x95, 0xa1, 0xd8, 0xd4, 0x4f, 0x8c, 0xbe, 0xd1, 0xed, 0x28, 0x59, 0x54, 0x84,
	0xac, 0x80, 0xe7, 0x90, 0x02, 0xe5, 0xfe, 0xf9, 0xb1, 0x35, 0xec, 0x9a, 0xa7, 0xad, 0x76, 0x77,
	0xa8, 0xe4, 0x51, 0x09, 0x72, 0xfa, 0x85, 0xde, 0x19, 0x28, 0x05, 0x0e, 0x1b, 0x1e, 0x19, 0x03,
	0xa5, 0xc8, 0x61, 0xe7, 0x7d, 0xdd, 0xb4, 0x9a, 0x7a, 0xcb, 0xe8, 0xe8, 0x4d, 0xa5, 0x74, 0xdc,
	0x3e, 0xae, 0xac, 0xf3, 0xee, 0x8d, 0xae, 0x0e, 0x27, 0x1e, 0xfb, 0x1c, 0x8d, 0xb8, 0xee, 0x46,
	0xa2, 0xbb, 0xb1, 0xd4, 0xdd, 0x70, 0x7c, 0x0f, 0x07, 0xac, 0x31, 0x21, 0x93, 0x70, 0xee, 0xac,
	0xc5, 0xc5, 0x7f, 0x62, 0x94, 0x17, 0xb6, 0xbc, 0xfa, 0x19, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x9c,
	0x80, 0xcd, 0x6e, 0x06, 0x00, 0x00,
}
