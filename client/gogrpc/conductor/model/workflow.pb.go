// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/workflow.proto

package model // import "github.com/netflix/conductor/client/gogrpc/conductor/model"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Workflow_WorkflowStatus int32

const (
	Workflow_RUNNING    Workflow_WorkflowStatus = 0
	Workflow_COMPLETED  Workflow_WorkflowStatus = 1
	Workflow_FAILED     Workflow_WorkflowStatus = 2
	Workflow_TIMED_OUT  Workflow_WorkflowStatus = 3
	Workflow_TERMINATED Workflow_WorkflowStatus = 4
	Workflow_PAUSED     Workflow_WorkflowStatus = 5
)

var Workflow_WorkflowStatus_name = map[int32]string{
	0: "RUNNING",
	1: "COMPLETED",
	2: "FAILED",
	3: "TIMED_OUT",
	4: "TERMINATED",
	5: "PAUSED",
}
var Workflow_WorkflowStatus_value = map[string]int32{
	"RUNNING":    0,
	"COMPLETED":  1,
	"FAILED":     2,
	"TIMED_OUT":  3,
	"TERMINATED": 4,
	"PAUSED":     5,
}

func (x Workflow_WorkflowStatus) String() string {
	return proto.EnumName(Workflow_WorkflowStatus_name, int32(x))
}
func (Workflow_WorkflowStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_workflow_827faed39aedc44b, []int{0, 0}
}

type Workflow struct {
	Status                   Workflow_WorkflowStatus   `protobuf:"varint,1,opt,name=status,enum=com.netflix.conductor.proto.Workflow_WorkflowStatus" json:"status,omitempty"`
	EndTime                  int64                     `protobuf:"varint,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	WorkflowId               string                    `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId" json:"workflow_id,omitempty"`
	ParentWorkflowId         string                    `protobuf:"bytes,4,opt,name=parent_workflow_id,json=parentWorkflowId" json:"parent_workflow_id,omitempty"`
	ParentWorkflowTaskId     string                    `protobuf:"bytes,5,opt,name=parent_workflow_task_id,json=parentWorkflowTaskId" json:"parent_workflow_task_id,omitempty"`
	Tasks                    []*Task                   `protobuf:"bytes,6,rep,name=tasks" json:"tasks,omitempty"`
	Input                    map[string]*_struct.Value `protobuf:"bytes,8,rep,name=input" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Output                   map[string]*_struct.Value `protobuf:"bytes,9,rep,name=output" json:"output,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorkflowType             string                    `protobuf:"bytes,10,opt,name=workflow_type,json=workflowType" json:"workflow_type,omitempty"`
	Version                  int32                     `protobuf:"varint,11,opt,name=version" json:"version,omitempty"`
	CorrelationId            string                    `protobuf:"bytes,12,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	ReRunFromWorkflowId      string                    `protobuf:"bytes,13,opt,name=re_run_from_workflow_id,json=reRunFromWorkflowId" json:"re_run_from_workflow_id,omitempty"`
	ReasonForIncompletion    string                    `protobuf:"bytes,14,opt,name=reason_for_incompletion,json=reasonForIncompletion" json:"reason_for_incompletion,omitempty"`
	SchemaVersion            int32                     `protobuf:"varint,15,opt,name=schema_version,json=schemaVersion" json:"schema_version,omitempty"`
	Event                    string                    `protobuf:"bytes,16,opt,name=event" json:"event,omitempty"`
	TaskToDomain             map[string]string         `protobuf:"bytes,17,rep,name=task_to_domain,json=taskToDomain" json:"task_to_domain,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FailedReferenceTaskNames []string                  `protobuf:"bytes,18,rep,name=failed_reference_task_names,json=failedReferenceTaskNames" json:"failed_reference_task_names,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_workflow_827faed39aedc44b, []int{0}
}
func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (dst *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(dst, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetStatus() Workflow_WorkflowStatus {
	if m != nil {
		return m.Status
	}
	return Workflow_RUNNING
}

func (m *Workflow) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *Workflow) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *Workflow) GetParentWorkflowId() string {
	if m != nil {
		return m.ParentWorkflowId
	}
	return ""
}

func (m *Workflow) GetParentWorkflowTaskId() string {
	if m != nil {
		return m.ParentWorkflowTaskId
	}
	return ""
}

func (m *Workflow) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Workflow) GetInput() map[string]*_struct.Value {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Workflow) GetOutput() map[string]*_struct.Value {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *Workflow) GetWorkflowType() string {
	if m != nil {
		return m.WorkflowType
	}
	return ""
}

func (m *Workflow) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Workflow) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *Workflow) GetReRunFromWorkflowId() string {
	if m != nil {
		return m.ReRunFromWorkflowId
	}
	return ""
}

func (m *Workflow) GetReasonForIncompletion() string {
	if m != nil {
		return m.ReasonForIncompletion
	}
	return ""
}

func (m *Workflow) GetSchemaVersion() int32 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

func (m *Workflow) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Workflow) GetTaskToDomain() map[string]string {
	if m != nil {
		return m.TaskToDomain
	}
	return nil
}

func (m *Workflow) GetFailedReferenceTaskNames() []string {
	if m != nil {
		return m.FailedReferenceTaskNames
	}
	return nil
}

func init() {
	proto.RegisterType((*Workflow)(nil), "com.netflix.conductor.proto.Workflow")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "com.netflix.conductor.proto.Workflow.InputEntry")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "com.netflix.conductor.proto.Workflow.OutputEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.netflix.conductor.proto.Workflow.TaskToDomainEntry")
	proto.RegisterEnum("com.netflix.conductor.proto.Workflow_WorkflowStatus", Workflow_WorkflowStatus_name, Workflow_WorkflowStatus_value)
}

func init() { proto.RegisterFile("model/workflow.proto", fileDescriptor_workflow_827faed39aedc44b) }

var fileDescriptor_workflow_827faed39aedc44b = []byte{
	// 688 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x6f, 0x4f, 0xd3, 0x40,
	0x18, 0x77, 0x8c, 0x0d, 0xf6, 0x8c, 0xcd, 0x72, 0x4e, 0xa9, 0x60, 0xe2, 0xc4, 0x98, 0xec, 0x05,
	0xe9, 0x14, 0x51, 0x0c, 0x89, 0x31, 0xe0, 0x36, 0x6d, 0x02, 0x63, 0x96, 0x02, 0x89, 0x89, 0x69,
	0xba, 0xf6, 0x3a, 0x9a, 0xb5, 0x77, 0xcd, 0xf5, 0x0a, 0xee, 0xd3, 0xf9, 0xd5, 0xcc, 0xdd, 0xad,
	0x50, 0xd4, 0x10, 0x5e, 0xf8, 0xae, 0xf7, 0xfc, 0xfe, 0xf4, 0xee, 0xf7, 0xdc, 0x73, 0xd0, 0x8a,
	0xa9, 0x8f, 0xa3, 0xee, 0x15, 0x65, 0xd3, 0x20, 0xa2, 0x57, 0x46, 0xc2, 0x28, 0xa7, 0x68, 0xc3,
	0xa3, 0xb1, 0x41, 0x30, 0x0f, 0xa2, 0xf0, 0xa7, 0xe1, 0x51, 0xe2, 0x67, 0x1e, 0xa7, 0x4c, 0x81,
	0xeb, 0x9a, 0x92, 0x70, 0x37, 0x9d, 0xce, 0x2b, 0xcf, 0x26, 0x94, 0x4e, 0x22, 0xdc, 0x95, 0xab,
	0x71, 0x16, 0x74, 0x53, 0xce, 0x32, 0x8f, 0x2b, 0x74, 0xf3, 0x57, 0x0d, 0x96, 0xcf, 0xe7, 0xfe,
	0xe8, 0x10, 0xaa, 0x29, 0x77, 0x79, 0x96, 0xea, 0xa5, 0x76, 0xa9, 0xd3, 0xdc, 0xde, 0x31, 0xee,
	0xf8, 0x95, 0x91, 0xcb, 0xae, 0x3f, 0x4e, 0xa4, 0xd6, 0x9a, 0x7b, 0xa0, 0xa7, 0xb0, 0x8c, 0x89,
	0xef, 0xf0, 0x30, 0xc6, 0xfa, 0x42, 0xbb, 0xd4, 0x29, 0x5b, 0x4b, 0x98, 0xf8, 0x76, 0x18, 0x63,
	0xf4, 0x1c, 0xea, 0xf9, 0xa1, 0x9c, 0xd0, 0xd7, 0xcb, 0xed, 0x52, 0xa7, 0x66, 0x41, 0x5e, 0x32,
	0x7d, 0xb4, 0x05, 0x28, 0x71, 0x19, 0x26, 0xdc, 0x29, 0xf2, 0x16, 0x25, 0x4f, 0x53, 0xc8, 0xf9,
	0x0d, 0xfb, 0x1d, 0xac, 0xfd, 0xc9, 0x16, 0x01, 0x08, 0x49, 0x45, 0x4a, 0x5a, 0xb7, 0x25, 0xb6,
	0x9b, 0x4e, 0x4d, 0x1f, 0xed, 0x42, 0x45, 0xd0, 0x52, 0xbd, 0xda, 0x2e, 0x77, 0xea, 0xdb, 0x2f,
	0xee, 0x3c, 0xad, 0xd0, 0x58, 0x8a, 0x8f, 0x06, 0x50, 0x09, 0x49, 0x92, 0x71, 0x7d, 0x59, 0x0a,
	0x5f, 0xdf, 0x2f, 0x26, 0x53, 0x48, 0xfa, 0x84, 0xb3, 0x99, 0xa5, 0xe4, 0xc8, 0x84, 0x2a, 0xcd,
	0xb8, 0x30, 0xaa, 0x49, 0xa3, 0x37, 0xf7, 0x33, 0x3a, 0x96, 0x1a, 0xe5, 0x34, 0x37, 0x40, 0x2f,
	0xa1, 0x71, 0x73, 0xf6, 0x59, 0x82, 0x75, 0x90, 0x07, 0x5f, 0xc9, 0x8b, 0xf6, 0x2c, 0xc1, 0x48,
	0x87, 0xa5, 0x4b, 0xcc, 0xd2, 0x90, 0x12, 0xbd, 0xde, 0x2e, 0x75, 0x2a, 0x56, 0xbe, 0x44, 0xaf,
	0xa0, 0xe9, 0x51, 0xc6, 0x70, 0xe4, 0xf2, 0x90, 0x12, 0x11, 0xdc, 0x8a, 0xd4, 0x37, 0x0a, 0x55,
	0xd3, 0x47, 0x3b, 0xb0, 0xc6, 0xb0, 0xc3, 0x32, 0xe2, 0x04, 0x8c, 0xc6, 0xb7, 0x7a, 0xd3, 0x90,
	0xfc, 0x47, 0x0c, 0x5b, 0x19, 0x19, 0x30, 0x1a, 0x17, 0xda, 0xf3, 0x5e, 0xa8, 0xdc, 0x94, 0x12,
	0x27, 0xa0, 0xcc, 0x09, 0x89, 0x47, 0xe3, 0x24, 0xc2, 0xc2, 0x52, 0x6f, 0x4a, 0xd5, 0x63, 0x05,
	0x0f, 0x28, 0x33, 0x0b, 0xa0, 0xd8, 0x54, 0xea, 0x5d, 0xe0, 0xd8, 0x75, 0xf2, 0x5d, 0x3f, 0x94,
	0xbb, 0x6e, 0xa8, 0xea, 0xd9, 0x7c, 0xef, 0x2d, 0xa8, 0xe0, 0x4b, 0x4c, 0xb8, 0xae, 0x49, 0x33,
	0xb5, 0x40, 0x3f, 0xa0, 0x29, 0xef, 0x00, 0xa7, 0x8e, 0x4f, 0x63, 0x37, 0x24, 0xfa, 0xaa, 0xcc,
	0x78, 0xf7, 0x7e, 0x19, 0x8b, 0x76, 0xdb, 0xb4, 0x27, 0x95, 0x2a, 0xe9, 0x15, 0x5e, 0x28, 0xa1,
	0x8f, 0xb0, 0x11, 0xb8, 0x61, 0x84, 0x7d, 0x87, 0xe1, 0x00, 0x33, 0x4c, 0x3c, 0xac, 0xee, 0x1c,
	0x71, 0x63, 0x9c, 0xea, 0xa8, 0x5d, 0xee, 0xd4, 0x2c, 0x5d, 0x51, 0xac, 0x9c, 0x21, 0x4c, 0x87,
	0x02, 0x5f, 0x1f, 0x01, 0xdc, 0x5c, 0x07, 0xa4, 0x41, 0x79, 0x8a, 0x67, 0x72, 0xe8, 0x6a, 0x96,
	0xf8, 0x44, 0x5b, 0x50, 0xb9, 0x74, 0xa3, 0x4c, 0x0d, 0x4e, 0x7d, 0xfb, 0x89, 0xa1, 0x86, 0xd8,
	0xc8, 0x87, 0xd8, 0x38, 0x13, 0xa8, 0xa5, 0x48, 0x7b, 0x0b, 0x1f, 0x4a, 0xeb, 0xdf, 0xa0, 0x5e,
	0xb8, 0x17, 0xff, 0xc5, 0xf2, 0x13, 0xac, 0xfe, 0x15, 0xc3, 0x3f, 0x8c, 0x5b, 0x45, 0xe3, 0x5a,
	0xc1, 0x60, 0xd3, 0x83, 0xe6, 0xed, 0xb7, 0x01, 0xd5, 0x61, 0xc9, 0x3a, 0x1d, 0x0e, 0xcd, 0xe1,
	0x17, 0xed, 0x01, 0x6a, 0x40, 0xed, 0xf3, 0xf1, 0xd1, 0xe8, 0xb0, 0x6f, 0xf7, 0x7b, 0x5a, 0x09,
	0x01, 0x54, 0x07, 0xfb, 0xe6, 0x61, 0xbf, 0xa7, 0x2d, 0x08, 0xc8, 0x36, 0x8f, 0xfa, 0x3d, 0xe7,
	0xf8, 0xd4, 0xd6, 0xca, 0xa8, 0x09, 0x60, 0xf7, 0xad, 0x23, 0x73, 0xb8, 0x2f, 0xa8, 0x8b, 0x82,
	0x3a, 0xda, 0x3f, 0x3d, 0xe9, 0xf7, 0xb4, 0xca, 0xc1, 0xd7, 0x03, 0xc8, 0x7f, 0x32, 0x1a, 0x7f,
	0xdf, 0x9b, 0x84, 0xfc, 0x22, 0x1b, 0x8b, 0x26, 0x77, 0xe7, 0x4d, 0xee, 0x5e, 0x37, 0xb9, 0xeb,
	0x45, 0x21, 0x26, 0xbc, 0x3b, 0xa1, 0x13, 0x96, 0x78, 0x85, 0xba, 0x7c, 0x34, 0xc7, 0x55, 0x19,
	0xc5, 0xdb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x79, 0x5d, 0x7e, 0x77, 0x05, 0x00, 0x00,
}
